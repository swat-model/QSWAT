<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>qswatConvertChoice</class>
 <widget class="QDialog" name="qswatConvertChoice">
  <property name="windowModality">
   <enum>Qt::ApplicationModal</enum>
  </property>
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>488</width>
    <height>320</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Convert to QSWAT choice</string>
  </property>
  <property name="windowIcon">
   <iconset resource="resources.qrc">
    <normaloff>:/QSWAT/QSWAT-Icon/QSWAT-Icon-SWAT-16.ico</normaloff>:/QSWAT/QSWAT-Icon/QSWAT-Icon-SWAT-16.ico</iconset>
  </property>
  <widget class="QDialogButtonBox" name="buttonBox">
   <property name="geometry">
    <rect>
     <x>130</x>
     <y>280</y>
     <width>341</width>
     <height>32</height>
    </rect>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
   <property name="standardButtons">
    <set>QDialogButtonBox::Cancel|QDialogButtonBox::Ok</set>
   </property>
  </widget>
  <widget class="QLabel" name="label">
   <property name="geometry">
    <rect>
     <x>20</x>
     <y>10</y>
     <width>441</width>
     <height>231</height>
    </rect>
   </property>
   <property name="text">
    <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt;There are three options available for converting an ArcSWAT project to QSWAT. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt;Choose &lt;/span&gt;&lt;span style=&quot; font-size:8pt; font-weight:600;&quot;&gt;Full &lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt;if you want to create a QSWAT project from scratch using your DEM, landuse and soil maps, and other data, starting with watershed delineation. You will be able to set thresholds, delineate the watershed, overlay soil and landuse maps, and define HRUs, as well as edit your inputs before running SWAT and visualising &lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt;existing or new&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; outputs.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt;Choose&lt;/span&gt;&lt;span style=&quot; font-size:8pt; font-weight:600;&quot;&gt; Existing &lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt;if you want to keep your existing watershed and subbasin boundaries and move straight to overlaying your landuse and soil maps and defining your HRUs. This avoids the risk that watershed delineation using QGIS and TauDEM will differ from watershed delineation using ArcGIS. You will be able to define HRUs, and edit your inputs before running SWAT and visulaising &lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt;existing or new&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; outputs.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt;Choose&lt;/span&gt;&lt;span style=&quot; font-size:8pt; font-weight:600;&quot;&gt; Edit, run, or visualise&lt;/span&gt;&lt;span style=&quot; font-size:8pt;&quot;&gt; if you want to use your existing SWAT model. You will not be able to change your watershed, subbasins or HRUs.  You will be able to edit your inputs, run SWAT, and visualise existing or new outputs.&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
   <property name="wordWrap">
    <bool>true</bool>
   </property>
  </widget>
  <widget class="QRadioButton" name="editButton">
   <property name="geometry">
    <rect>
     <x>250</x>
     <y>250</y>
     <width>141</width>
     <height>17</height>
    </rect>
   </property>
   <property name="text">
    <string>Edit, run, or viualise</string>
   </property>
  </widget>
  <widget class="QRadioButton" name="fullButton">
   <property name="geometry">
    <rect>
     <x>40</x>
     <y>250</y>
     <width>82</width>
     <height>17</height>
    </rect>
   </property>
   <property name="text">
    <string>Full</string>
   </property>
   <property name="checked">
    <bool>true</bool>
   </property>
  </widget>
  <widget class="QRadioButton" name="existButton">
   <property name="geometry">
    <rect>
     <x>140</x>
     <y>250</y>
     <width>82</width>
     <height>17</height>
    </rect>
   </property>
   <property name="text">
    <string>Existing</string>
   </property>
   <property name="checked">
    <bool>false</bool>
   </property>
  </widget>
 </widget>
 <resources>
  <include location="resources.qrc"/>
 </resources>
 <connections>
  <connection>
   <sender>buttonBox</sender>
   <signal>accepted()</signal>
   <receiver>qswatConvertChoice</receiver>
   <slot>accept()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>248</x>
     <y>254</y>
    </hint>
    <hint type="destinationlabel">
     <x>157</x>
     <y>274</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>buttonBox</sender>
   <signal>rejected()</signal>
   <receiver>qswatConvertChoice</receiver>
   <slot>reject()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>316</x>
     <y>260</y>
    </hint>
    <hint type="destinationlabel">
     <x>286</x>
     <y>274</y>
    </hint>
   </hints>
  </connection>
 </connections>
</ui>
